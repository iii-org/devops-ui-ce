include:
- project: iiidevops-templates/ci-template
  ref: v2.5.4
  file: ci/template.gitlab-ci.yml
stages:
- initial
- scan
- build
- deploy
- test
Copy Code From EE:
  stage: initial
  variables:
    iiidevops: copy-code
  image:
    name: iiiorg/iiidevops-cli:0.0.7
  before_script:
  - git config --global user.email "gitlab-ci@dev7.iiidevops.org"
  - git config --global user.name "GitLab CI"
  script:
  - git clone https://gitlab-ci-token:$CI_JOB_TOKEN@gitlab.dev7.iiidevops.org/iiidevops/devopsui-mono.git
    Mono
  - 'cp Mono/dockerfiles/LITE.Dockerfile ./Dockerfile

    cp Mono/app/yarn.lock ./app/yarn.lock

    cp Mono/app/lerna.json ./app/lerna.json

    cp Mono/app/package_ce.json ./app/package.json

    cp Mono/app/postcss.config.js ./app/postcss.config.js

    cp Mono/build/entrypoint.sh ./build/entrypoint.sh

    cp Mono/build/default.nginx ./build/default.nginx

    cp -r Mono/app/apps/lite ./app/apps

    cp -r Mono/app/apps/shared ./app/apps

    cp -r Mono/iiidevops ./

    '
  - rm -rf Mono
  - "if [ -f common.yaml ]; then\n  rm common.yaml\nfi\n"
  - git add -A
  - git commit -m "Sync from full by bot"
  - git push "https://gitlab-ci-token:$PUSH_TOKEN@$CI_SERVER_HOST/$CI_PROJECT_PATH.git"
    HEAD:$CI_DEFAULT_BRANCH
  - git push "https://gitlab-ci-token:$PUSH_TOKEN@$CI_SERVER_HOST/$CI_PROJECT_PATH.git"
    --tags
  - "echo \"\u540C\u6B65\u6210\u529F\uFF0C\u6545\u610F\u62CB\u51FA\u932F\u8AA4\u4EE5\
    \u66AB\u505C\u5F8C\u7E8C\u4EFB\u52D9\u57F7\u884C\""
  - exit 10
  rules:
  - if: $CI_PIPELINE_SOURCE == 'trigger'
Test--SonarQube source code scan:
  variables:
    iiidevops: sonarqube
    CHART_TYPE: normal
  only:
    refs:
    - skip
    variables:
    - $CI_PIPELINE_SOURCE != 'trigger'
Test--Anchore SBOM source code scan:
  variables:
    iiidevops: anchore-code
  only:
  - skip
Test--Checkmarx source code scan:
  variables:
    iiidevops: checkmarx
  only:
    refs:
    - master
    variables:
    - $CI_PIPELINE_SOURCE != 'trigger'
Build image:
  variables:
    iiidevops: deployed-environments
  only:
    refs:
    - master
    variables:
    - $CI_PIPELINE_SOURCE != 'trigger'
Build--Scan docker image:
  variables:
    iiidevops: deployed-environments
  only:
    refs:
    - master
    variables:
    - $CI_PIPELINE_SOURCE != 'trigger'
Deploy--Set environment and wait deployment:
  variables:
    iiidevops: deployed-environments
  only:
    refs:
    - master
    variables:
    - $CI_PIPELINE_SOURCE != 'trigger'
Deploy--Web:
  variables:
    iiidevops: deployed-environments
    CHART_WEB_PORT: 80
    CHART_PROXY_BODY_SIZE: 1m
  only:
    refs:
    - master
    variables:
    - $CI_PIPELINE_SOURCE != 'trigger'
Test--Anchore SBOM:
  variables:
    iiidevops: anchore
  only:
    refs:
    - skip
    variables:
    - $CI_PIPELINE_SOURCE != 'trigger'
Test--ZAP:
  variables:
    iiidevops: zap
    CHART_WEB_PORT: 80
  only:
    refs:
    - skip
    variables:
    - $CI_PIPELINE_SOURCE != 'trigger'
Test--WebInspect:
  variables:
    iiidevops: webinspect
  only:
    refs:
    - skip
    variables:
    - $CI_PIPELINE_SOURCE != 'trigger'
Test--Postman:
  variables:
    iiidevops: postman
    CHART_WEB_PORT: 80
  only:
    refs:
    - skip
    variables:
    - $CI_PIPELINE_SOURCE != 'trigger'
Test--Sideex:
  variables:
    iiidevops: sideex
    CHART_WEB_PORT: 80
  only:
    refs:
    - skip
    variables:
    - $CI_PIPELINE_SOURCE != 'trigger'
